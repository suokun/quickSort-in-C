#include <stdio.h> 

int partition(int a[], int left, int right) 
{ 
    int i,j,temp; 
    i = left; 
    j = right; 
    temp = a[i]; 

    while(i < j){ 
            //look from the right to the left, until a(right)<temp, change 
            while(i<j && a[j]>=temp) 
                      j--; 
            if(i<j) 
            { 
                     a[i]=a[j]; 
                     i++; 
            } 

            //look from the left to the right, until a(left)>temp, change 
            while(i<j && a[i]<temp) 
                     i++; 
            if(i<j) 
            { 
                     a[j]=a[i]; 
                     j--; 
            } 
     } 

     //when i=j, find the position i, to put the temp, and leftvalue < temp < rightvalue 
     a[i] = temp; 
     return i; 
} 


void quickSort(int a[], int left, int right) 
{ 
    int pivotIndex; 

    if(left < right) 
    { 
          //partition() get the elements smaller than pivot in the left,  bigger than pivot in the right 
          pivotIndex = partition(a, left, right); 

          quickSort(a, left, pivotIndex-1); 
          quickSort(a, pivotIndex+1, right); 
    } 
} 


int main() 
{ 
    int i; 
    int a[6]={3,8,0,1,2,9}; 
    quickSort(a, 0, 5); 

    for(i=0; i < 6; i++) 
    printf("%d,",a[i]); 
    return 0; 
}
